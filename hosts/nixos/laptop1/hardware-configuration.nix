# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "ehci_pci" "xhci_pci" "usbhid" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/boot/efi" = {
      device = "/dev/disk/by-uuid/66CF-3A7F";
      fsType = "vfat";
    };
    "/nix" = {
      device = "/dev/disk/by-uuid/40ee85a5-f1d8-4f5e-812a-97f199290569";
      fsType = "ext4";
      options = ["noatime"];
    };
  };

  boot.initrd.luks.devices."nixos-root" = {
    device = "/dev/disk/by-uuid/57995db4-ffde-4db3-a603-5eedd663f675";
    allowDiscards = true;
  };

  swapDevices =
    [ {
        device = "/dev/disk/by-partuuid/52129fcd-ab55-443c-9772-8c9df2fb6c29";
        randomEncryption = {
          enable = true;
          allowDiscards = true;
        };
      }
    ];


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0f3u1u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
